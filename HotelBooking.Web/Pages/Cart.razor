@page "/cart"
@using HotelBooking.BookingDTO.HotelDtos
@using HotelBooking.BookingDTO.RoomDtos
@using HotelBooking.BookingDTO.UserDTOs
@using HotelBooking.Services.Contracts
@using HotelBooking.Web.Requests
@using System.Text.Json

@inject NavigationManager Navigation
@inject ISnackbar Snackbar
@inject IRoomService RoomService
@inject IJSRuntime JSRuntime
@inject IHotelService _hotelService

<MudContainer Class="">
    
        <MudTypography Typo="Typo.h6">Корзина</MudTypography>

        @if (roomsInCart == null || roomsInCart.Count == 0)
        {
            <MudAlert Severity="Severity.Info">Ваша корзина пуста.</MudAlert>
        }
        else
        {
            @foreach (var room in roomsInCart)
            {
               if (hotelsDictionary.ContainsKey(room.HotelId))
                {
                    var hotelInfo = hotelsDictionary[room.HotelId];

                    <div style="margin-bottom: 16px; border: 1px solid #ccc; border-radius: 8px; overflow: hidden; width: 300px; display: flex; flex-direction: column;">

                        <div style="text-align: center; padding: 16px; background-color: #f0f0f0;">
                            <div style="display: flex; justify-content: space-between; align-items: center;">
                                <div>
                                    <h6 style="margin-bottom: 8px;">@room.RoomType</h6>
                                    <p style="font-weight: bold; margin-bottom: 4px;">@hotelInfo.Name</p>
                                </div>
                                <div>
                                    <p>Цена за ночь: $@room.PricePerNight</p>
                                    <p>Вместимость: @room.Capacity</p>
                                </div>
                            </div>
                        </div>

                        <div style="text-align: center; padding: 8px; background-color: #e0e0e0;">
                            <button onclick="@(() => RemoveFromCart(room))" style="background-color: #f44336; color: white; padding: 8px 16px; border: none; border-radius: 4px; cursor: pointer;">Remove from Cart</button>
                        </div>

                 </div>




                }
            }

            <MudButton @onclick="NavigateToBookingPage" Variant="Variant.Filled">Забронировать</MudButton>
        }
    
</MudContainer>

@code {
    private List<RoomDto> roomsInCart;
    private Dictionary<int, HotelDto> hotelsDictionary = new Dictionary<int, HotelDto>();

    protected override async Task OnInitializedAsync()
    {
        await LoadRoomsInCart();
    }

    private async Task LoadRoomsInCart()
    {



        var roomInCartJson = await JSRuntime.InvokeAsync<string>("localStorage.getItem", "roomsinCart");
        if (roomInCartJson == null)
        {
            roomsInCart = new List<RoomDto>();
        }
        else
        {
            try
            {
                roomsInCart = JsonSerializer.Deserialize<List<RoomDto>>(roomInCartJson);
            }
            catch (Exception ex)
            {
                roomsInCart = new List<RoomDto>();
                Console.WriteLine($"Error deserializing roomInCartJson: {ex.Message}");
            }

            await FetchHotelDetails();
        }

    }

    private async Task RemoveFromCart(RoomDto room)
    {
        roomsInCart.Remove(room);
        await JSRuntime.InvokeVoidAsync("localStorage.setItem", "roomsinCart", roomsInCart);
        Snackbar.Add("Room removed from the cart.", Severity.Success);
        StateHasChanged();
    }

    private void NavigateToBookingPage()
    {
        // Navigate to the booking page
        //room not null
        Navigation.NavigateTo("/booking");
    }

    private async Task FetchHotelDetails()
    {
        foreach (var room in roomsInCart)
        {
            // Fetch hotel information if not already in the dictionary
            if (!hotelsDictionary.ContainsKey(room.HotelId))
            {
                var hotel = await _hotelService.GetById(room.HotelId);
                Console.WriteLine(hotel);
                if (hotel != null)
                {
                    hotelsDictionary.Add(room.HotelId, hotel);
                }
            }
        }
    }
}
